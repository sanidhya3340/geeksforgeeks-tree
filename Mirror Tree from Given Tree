//https://www.geeksforgeeks.org/create-a-mirror-tree-from-the-given-binary-tree/

#include <bits/stdc++.h>
using namespace std;

struct node {
    int data;
    struct node* left;
    struct node* right;
};


struct node* createNode(int val) {
    struct node* newNode = (node*)malloc(sizeof(node));
    newNode->data = val;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

void inorder(struct node* root)
{
    if(!root) return;
    
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}


struct node* mirrorTree(struct node* root)
{
	if(!root) return root;

	struct node* t = root->left;
	root->left = root->right;
	root->right = t;
	if(root->left) mirrorTree(root->left);
	if(root->right) mirrorTree(root->right);

	return root;
}


int main()
{
 
    node* tree = createNode(5);
    tree->left = createNode(3);
    tree->right = createNode(6);
    tree->left->left = createNode(2);
    tree->left->right = createNode(4);
    printf("Inorder of original tree: ");
    inorder(tree);
 
    mirrorTree(tree);
 
    printf("\nInorder of Miror tree: ");
    inorder(tree);
    return 0;
}
