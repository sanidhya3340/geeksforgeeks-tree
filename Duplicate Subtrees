
#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    struct node *left;
    struct node *right;
    node(int data)
    {
        this->data = data;
        left = right = NULL;
    }
};

vector<node*> q;

void printPost(node* root){
    if(!root) return;
    printPost(root->left);
    printPost(root->right);
    cout<<root->data<<" ";
}


string inorder(node* node, unordered_map<string, int>&m)
{
    if(!node) return "";
    string str = "(";
    str += inorder(node->left,m);
    str += to_string(node->data);
    str += inorder(node->right, m);
    str += ")";

    if(m[str] == 1)
    {
        q.push_back(node);
        // cout<<node->data<<" ";
    }

    m[str]++;
    // cout<<"str:"<<str<<endl;
    return str;
}

void printAllDups(node* root) {
    unordered_map<string, int> m;
    inorder(root, m);
    for(int i=0;i<q.size();i++) {
        printPost(q[i]);
        cout<<endl;
    }
}

int main()
{
    struct node* root = new node(1);
    root->left = new node(2);
    root->right = new node(3);
    root->left->left = new node(4);
    root->right->right = new node(4);
    root->right->left = new node(2);
    root->right->left->left = new node(4);

    printAllDups(root);

    // root->right->right = new node(7);
    // root->right->left = new node(6);



    

    return 0;
}
